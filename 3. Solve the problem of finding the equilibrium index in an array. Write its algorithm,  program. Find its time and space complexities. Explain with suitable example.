Equilibrium Index of an array is an index such that the sum of elements before it is equal to the sum of elements after it.

ðŸ”¹1. Algorithm
Compute the total sum of the array.
Initialize leftSum = 0.

Traverse the array:For every index i, subtract arr[i] from total to get rightSum.

If leftSum == rightSum, return index i as the equilibrium index.
Add arr[i] to leftSum for next iteration.

If no such index found, return -1.

ðŸ”¹2. Java Program
public static int findEquilibriumIndex(int[] arr) {
        int totalSum = 0;
        for (int num : arr) {
            totalSum += num;
        }
        int leftSum = 0;

        for (int i = 0; i < arr.length; i++) {
            totalSum -= arr[i]; 

            if (leftSum == totalSum) {
                return i;
            }
            leftSum += arr[i];  
        }
        return -1; 
    }
ðŸ”¹3. Time and Space Complexity

Task	              Complexity
Time Complexity	    O(n)
Space Complexity	  O(1)

ðŸ”¹4. Example
Input:arr = {-7, 1, 5, 2, -4, 3, 0}

Step-by-Step:Total Sum = 0

Index 0 â†’ leftSum = 0, rightSum = 7 â‰  0
Index 1 â†’ leftSum = -7, rightSum = 6 â‰  -7
Index 2 â†’ leftSum = -6, rightSum = 1 â‰  -6
Index 3 â†’ leftSum = -1, rightSum = -1 âœ… MATCH

Output:
Equilibrium index is: 3
