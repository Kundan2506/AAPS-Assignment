public class KadenesAlgorithm {

    public static int maxSubArraySum(int[] nums) {

        int maxS = nums[0]; 
        int maxEndingHere = nums[0]; 

        for (int i = 1; i < nums.length; i++) {
            maxEndingHere = Math.max(nums[i], maxEndingHere + nums[i]);

            max = Math.max(max, maxEndingHere);
        }
        
        return max;
    }
}

ðŸ”¹Time and Space Complexity Analysis:

Time Complexity: O(n), where n is the number of elements in the array. We only traverse the array once.
Space Complexity: O(1). We are using only a constant amount of space for variables like maxSoFar and maxEndingHere.


